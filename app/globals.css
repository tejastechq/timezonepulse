@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #f8f8f8;
  --foreground: #333333;
  --glass-light: rgba(255, 255, 255, 0.7);
  --glass-dark: rgba(30, 30, 30, 0.7);
  --glass-border-light: rgba(255, 255, 255, 0.5);
  --glass-border-dark: rgba(50, 50, 50, 0.5);
  --glass-shadow-light: rgba(0, 0, 0, 0.05);
  --glass-shadow-dark: rgba(0, 0, 0, 0.2);
  --card-highlight-light: rgba(255, 255, 255, 0.8);
  --card-highlight-dark: rgba(70, 70, 70, 0.8);
}

.dark {
  --background: #121212;
  --foreground: #f8f8f8;
}

body {
  color: var(--foreground);
  background-color: var(--background);
  overflow-x: hidden;
}

/* Custom utility classes */
@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Enhanced Glassmorphism effects */
.glass-card {
  @apply backdrop-blur-lg border border-opacity-50 shadow-lg transition-all duration-300;
  position: relative;
  overflow: hidden;
}

.glass-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg, 
    transparent, 
    rgba(255, 255, 255, 0.05), 
    transparent
  );
  transition: left 0.7s ease-in-out;
  pointer-events: none;
}

.glass-card:hover::before {
  left: 100%;
}

.glass-card-light {
  background-color: var(--glass-light);
  border-color: var(--glass-border-light);
  box-shadow: 
    0 4px 6px -1px var(--glass-shadow-light),
    0 2px 4px -2px var(--glass-shadow-light),
    0 0 0 1px rgba(255, 255, 255, 0.1) inset;
}

.glass-card-light::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--card-highlight-light), transparent);
  opacity: 0.6;
}

.glass-card-dark {
  background-color: var(--glass-dark);
  border-color: var(--glass-border-dark);
  box-shadow: 
    0 4px 6px -1px var(--glass-shadow-dark),
    0 2px 4px -2px var(--glass-shadow-dark),
    0 0 0 1px rgba(255, 255, 255, 0.03) inset;
}

.glass-card-dark::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--card-highlight-dark), transparent);
  opacity: 0.3;
}

.glass-card:hover {
  @apply shadow-xl translate-y-[-3px];
  box-shadow: 
    0 10px 25px -5px rgba(0, 0, 0, 0.1),
    0 8px 10px -6px rgba(0, 0, 0, 0.1);
}

/* View transition animations */
.view-transition-enter-active {
  opacity: 1;
  transition: opacity 0.3s ease-in-out;
}

.view-transition-exit-active {
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

/* Dashboard animations */
.dashboard-enter-active {
  opacity: 1;
  max-height: 1000px;
  transition: opacity 0.3s ease-in-out, max-height 0.3s ease-in-out;
}

.dashboard-exit-active {
  opacity: 0;
  max-height: 0;
  transition: opacity 0.3s ease-in-out, max-height 0.3s ease-in-out;
}

.dashboard-container {
  transition: opacity 0.3s ease-in-out;
}

.dashboard-container.visible {
  opacity: 1;
}

.dashboard-container:not(.visible) {
  opacity: 0;
}

/* Time selection animations */
.user-selected {
  animation: pulse 1.5s ease-in-out;
}

.auto-scroll-transition {
  animation: highlight 1.2s ease-in-out;
}

@keyframes pulse {
  0% {
    background-color: rgba(var(--primary-500), 0.2);
  }
  50% {
    background-color: rgba(var(--primary-500), 0.5);
  }
  100% {
    background-color: transparent;
  }
}

@keyframes highlight {
  0% {
    background-color: transparent;
  }
  30% {
    background-color: rgba(var(--primary-500), 0.3);
  }
  100% {
    background-color: transparent;
  }
}

/* Improved Scrollbar styling */
.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
}

.scrollbar-thin::-webkit-scrollbar-track {
  background: rgba(229, 231, 235, 0.5);
  border-radius: 3px;
}

.scrollbar-thin::-webkit-scrollbar-thumb {
  background-color: rgba(156, 163, 175, 0.5);
  border-radius: 3px;
}

.dark .scrollbar-thin::-webkit-scrollbar-track {
  background: rgba(55, 65, 81, 0.5);
}

.dark .scrollbar-thin::-webkit-scrollbar-thumb {
  background-color: rgba(107, 114, 128, 0.5);
}

/* Enhanced hover effects */
@keyframes shimmer {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

.hover-shimmer:hover {
  background-image: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

/* Handle reduced motion preferences with CSS */
@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Use the data attribute for components that need to access this preference */
html[data-prefers-reduced-motion="true"] .view-transition-enter-active,
html[data-prefers-reduced-motion="true"] .view-transition-exit-active,
html[data-prefers-reduced-motion="true"] .dashboard-enter-active,
html[data-prefers-reduced-motion="true"] .dashboard-exit-active {
  transition: none !important;
}

html[data-prefers-reduced-motion="true"] .glass-card::before,
html[data-prefers-reduced-motion="true"] .hover-shimmer:hover {
  animation: none !important;
}

/* Font loading optimization with data attributes */
html[data-fonts-loaded="true"] {
  /* Apply any styles needed for loaded fonts */
  font-display: swap;
}

/* BFCache restoration handling */
html[data-bfcache-restored="true"] {
  /* Styles for restored pages if needed */
} 