@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #f8f8f8;
  --foreground: #333333;
  --glass-light: rgba(255, 255, 255, 0.25);
  --glass-dark: rgba(15, 15, 25, 0.35);
  --glass-border-light: rgba(255, 255, 255, 0.5);
  --glass-border-dark: rgba(50, 50, 50, 0.5);
  --glass-shadow-light: rgba(0, 0, 0, 0.05);
  --glass-shadow-dark: rgba(0, 0, 0, 0.2);
  --card-highlight-light: rgba(255, 255, 255, 0.8);
  --card-highlight-dark: rgba(70, 70, 70, 0.8);
  --main-heading-visibility: visible;
}

.dark {
  --background: #121212;
  --foreground: #f8f8f8;
}

body {
  color: var(--foreground);
  background-color: var(--background);
  overflow-x: hidden;
  position: relative;
}

/* Dynamic background with gradient and shapes for glassmorphism effect */
body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(circle at 20% 30%, rgba(41, 84, 163, 0.15) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(138, 43, 226, 0.1) 0%, transparent 40%);
  z-index: -2;
  pointer-events: none;
}

/* Floating colored shapes for visual interest */
body::after {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    radial-gradient(circle at 10% 10%, rgba(25, 118, 210, 0.03) 0%, rgba(25, 118, 210, 0.03) 8%, transparent 8.5%),
    radial-gradient(circle at 90% 5%, rgba(106, 27, 154, 0.03) 0%, rgba(106, 27, 154, 0.03) 4%, transparent 4.5%);
  z-index: -1;
  pointer-events: none;
  contain: strict;
}

/* Dark mode modifications for background */
.dark body::before {
  background: 
    radial-gradient(circle at 20% 30%, rgba(56, 189, 248, 0.08) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(167, 139, 250, 0.08) 0%, transparent 40%),
    radial-gradient(circle at 40% 80%, rgba(16, 185, 129, 0.08) 0%, transparent 40%),
    radial-gradient(circle at 75% 60%, rgba(251, 146, 60, 0.05) 0%, transparent 40%);
}

.dark body::after {
  background-image: 
    radial-gradient(circle at 10% 10%, rgba(56, 189, 248, 0.04) 0%, rgba(56, 189, 248, 0.04) 8%, transparent 8.5%),
    radial-gradient(circle at 90% 5%, rgba(167, 139, 250, 0.04) 0%, rgba(167, 139, 250, 0.04) 4%, transparent 4.5%),
    radial-gradient(circle at 80% 80%, rgba(16, 185, 129, 0.04) 0%, rgba(16, 185, 129, 0.04) 6%, transparent 6.5%),
    radial-gradient(circle at 20% 60%, rgba(251, 146, 60, 0.04) 0%, rgba(251, 146, 60, 0.04) 5%, transparent 5.5%),
    radial-gradient(circle at 50% 30%, rgba(59, 130, 246, 0.04) 0%, rgba(59, 130, 246, 0.04) 7%, transparent 7.5%),
    radial-gradient(circle at 70% 50%, rgba(236, 72, 153, 0.04) 0%, rgba(236, 72, 153, 0.04) 4%, transparent 4.5%);
}

/* Custom utility classes */
@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Enhanced Glassmorphism effects */
.glass-card {
  @apply relative border border-opacity-50 shadow-lg transition-all duration-300;
  position: relative;
  overflow: hidden;
  /* Explicitly set backdrop-filter properties with fallback */
  background-color: var(--glass-light); /* Fallback */
}

/* Apply backdrop-filter only for browsers that support it */
@supports ((-webkit-backdrop-filter: blur(8px)) or (backdrop-filter: blur(8px))) {
  .glass-card {
    -webkit-backdrop-filter: blur(8px);
    backdrop-filter: blur(8px);
    background-color: var(--glass-light); /* Override with more transparent bg */
    /* Promote to GPU layer but only for supported browsers */
    transform: translateZ(0);
  }
  
  .glass-card.glass-card-dark {
    background-color: var(--glass-dark);
  }
}

/* Fix the infinite hover animation issue with a completely different approach */
.glass-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg, 
    transparent, 
    rgba(255, 255, 255, 0.05), 
    transparent
  );
  pointer-events: none;
  z-index: 0;
  /* Ensure animation can only be triggered by adding a class, not by CSS properties change */
  will-change: transform;
  transition: none;
}

/* Define the animation that will be used */
@keyframes shine {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* Class to be added via JS, with animation-iteration-count: 1 to ensure it only runs once */
.glass-card.animate-shine::before {
  animation: shine 0.7s forwards;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
  /* Prevent any other transitions from interfering */
  transition: none !important;
}

/* Explicitly prevent any animation when not in the animate-shine state */
.glass-card:not(.animate-shine)::before {
  animation: none !important;
  left: -100% !important;
  /* Prevent any transitions from accidentally triggering the animation */
  transition: none !important;
}

.glass-card-light {
  background-color: rgba(255, 255, 255, 0.2);
  border-color: var(--glass-border-light);
  box-shadow: 
    0 4px 6px -1px var(--glass-shadow-light),
    0 2px 4px -2px var(--glass-shadow-light),
    0 0 0 1px rgba(255, 255, 255, 0.1) inset;
}

.glass-card-light::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--card-highlight-light), transparent);
  opacity: 0.6;
}

.glass-card-dark {
  background-color: rgba(15, 15, 25, 0.25);
  border-color: var(--glass-border-dark);
  box-shadow: 
    0 4px 6px -1px var(--glass-shadow-dark),
    0 2px 4px -2px var(--glass-shadow-dark),
    0 0 0 1px rgba(255, 255, 255, 0.03) inset;
}

.glass-card-dark::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--card-highlight-dark), transparent);
  opacity: 0.3;
}

.glass-card:hover {
  @apply shadow-xl;
  transform: translateY(-3px);
  box-shadow: 
    0 10px 25px -5px rgba(0, 0, 0, 0.1),
    0 8px 10px -6px rgba(0, 0, 0, 0.1);
}

/* View transition animations */
.view-transition-enter-active {
  opacity: 1;
  transition: opacity 0.3s ease-in-out;
}

.view-transition-exit-active {
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

/* Dashboard animations */
.dashboard-enter-active {
  opacity: 1;
  max-height: 1000px;
  transition: opacity 0.3s ease-in-out, max-height 0.3s ease-in-out;
}

.dashboard-exit-active {
  opacity: 0;
  max-height: 0;
  transition: opacity 0.3s ease-in-out, max-height 0.3s ease-in-out;
}

.dashboard-container {
  transition: opacity 0.3s ease-in-out;
  contain: layout style;
}

.dashboard-container.visible {
  opacity: 1;
}

.dashboard-container:not(.visible) {
  opacity: 0;
}

/* Time selection animations */
.user-selected {
  animation: pulse 1.5s ease-in-out;
}

.auto-scroll-transition {
  animation: highlight 1.2s ease-in-out;
}

@keyframes pulse {
  0% {
    background-color: rgba(var(--primary-500), 0.2);
  }
  50% {
    background-color: rgba(var(--primary-500), 0.5);
  }
  100% {
    background-color: transparent;
  }
}

@keyframes highlight {
  0% {
    background-color: transparent;
  }
  30% {
    background-color: rgba(var(--primary-500), 0.3);
  }
  100% {
    background-color: transparent;
  }
}

/* Improved Scrollbar styling */
.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
}

.scrollbar-thin::-webkit-scrollbar-track {
  background: rgba(229, 231, 235, 0.5);
  border-radius: 3px;
}

.scrollbar-thin::-webkit-scrollbar-thumb {
  background-color: rgba(156, 163, 175, 0.5);
  border-radius: 3px;
}

.dark .scrollbar-thin::-webkit-scrollbar-track {
  background: rgba(55, 65, 81, 0.5);
}

.dark .scrollbar-thin::-webkit-scrollbar-thumb {
  background-color: rgba(107, 114, 128, 0.5);
}

/* Enhanced hover effects */
@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* Disable the conflicting hover-shimmer animation */
.glass-card:hover::before {
  /* Remove the infinite animation that might be conflicting */
  animation: none !important;
  transform: none !important;
  transition: none !important;
}

/* Ensure the shimmer effect for loading states doesn't interfere with our hover animation */
.shimmer {
  /* Use a different class name for the loading animation to avoid conflicts */
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0),
    rgba(255, 255, 255, 0.2),
    rgba(255, 255, 255, 0)
  );
  background-size: 200% 100%;
  background-position: -100% 0;
  animation: shimmer-loading 1.5s infinite;
}

@keyframes shimmer-loading {
  to {
    background-position: 200% 0;
  }
}

/* Use a more explicit name for the loading animation */
@keyframes shimmer {
  to {
    background-position: 200% 0;
  }
}

/* Make card contents visible above the background */
.glass-card > * {
  position: relative;
  z-index: 2;
}

/* Ensure proper isolation for backdrop-filter */
@supports (backdrop-filter: blur(8px)) {
  .glass-card {
    isolation: isolate;
  }
}

/* Handle reduced motion preferences with CSS */
@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  /* Specifically disable our shine animation */
  .glass-card.animate-shine::before {
    animation: none !important;
  }
}

/* Use the data attribute for components that need to access this preference */
html[data-prefers-reduced-motion="true"] .view-transition-enter-active,
html[data-prefers-reduced-motion="true"] .view-transition-exit-active,
html[data-prefers-reduced-motion="true"] .dashboard-enter-active,
html[data-prefers-reduced-motion="true"] .dashboard-exit-active {
  transition: none !important;
}

html[data-prefers-reduced-motion="true"] .glass-card::before,
html[data-prefers-reduced-motion="true"] .glass-card.animate-shine::before {
  animation: none !important;
}

/* Font loading optimization with data attributes */
html[data-fonts-loaded="true"] {
  /* Apply any styles needed for loaded fonts */
  font-display: swap;
}

/* BFCache restoration handling */
html[data-bfcache-restored="true"] {
  /* Styles for restored pages if needed */
  /* Add specific visibility rules for any elements that should be immediately visible */
  --main-heading-visibility: visible;
}

/* Make sure heading is properly displayed when coming from bfcache */
html[data-bfcache-restored="true"] #main-heading {
  visibility: visible;
  opacity: 1;
}

/* Optimized main heading for immediate visibility */
#main-heading {
  visibility: var(--main-heading-visibility, visible);
  contain: content;
  content-visibility: auto;
  contain-intrinsic-size: 0 32px;
}

/* Optimize expensive animations */
@media (prefers-reduced-motion: no-preference) {
  /* Apply animations only when reduced motion is not preferred */
  @keyframes shine {
    0% { left: -100%; }
    100% { left: 100%; }
  }
} 